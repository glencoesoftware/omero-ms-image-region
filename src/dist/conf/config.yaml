# The port that the microservice will listen on
port: 8080
# Size of the worker pool (defaults to CPUs x 2)
#worker_pool_size: 8
# Configuration for request parsing limits
#  * https://vertx.io/docs/apidocs/io/vertx/core/http/HttpServerOptions.html#setMaxInitialLineLength-int-
#  * https://vertx.io/docs/apidocs/io/vertx/core/http/HttpServerOptions.html#setMaxHeaderSize-int-
#  * https://vertx.io/docs/apidocs/io/vertx/core/http/HttpServerOptions.html#setMaxChunkSize-int-
#  * https://netty.io/4.0/api/io/netty/handler/codec/http/HttpRequestDecoder.html#HttpRequestDecoder--
# max-initial-line-length: 4096
# max-header-size: 8192
# max-chunk-size: 8192
# OMERO server that the microservice will communicate with (as a client)
omero:
    host: "localhost"
    port: 4064
# Copy of the OMERO server configuration which will be reused
omero.server:
    omero.data.dir: "/OMERO"
    omero.db.host: "localhost"
    omero.db.name: "omero"
    omero.db.port: "5432"
    omero.db.user: "omero"
    omero.db.pass: "omero"
    # OMERO_HOME/lib/scripts
    omero.script_repo_root: "/opt/omero/lib/scripts"
    omero.pixeldata.max_tile_length: "2048"
# OMERO.web configuration
omero.web:
    session_cookie_name: "sessionid"

# Information about the session store.
session-store:
    #type is either "postgres" or "redis"
    type: "postgres"
    #synchronicity is either "sync" or "async"
    synchronicity: "async"
    #uri for either postgres db or redis
    # * https://jdbc.postgresql.org/documentation/80/connect.html
    # * https://github.com/lettuce-io/lettuce-core/wiki/Redis-URI-and-connection-details
    uri: "jdbc:postgresql://localhost:5432/omero_database?user=omero&password=omero"
    # uri: "redis://:password@localhost:6379/1"

# Redis instance that OMERO.web is using to store cache data.  It is strongly
# recommended that this instance *not* be the same as the one used to store
# session information as the LRU is instance wide.
redis-cache:
    uri: "redis://password@localhost:7379/1"

# Configuration for zipkin http tracing
http-tracing:
    enabled: true
    zipkin-url: "http://localhost:9411/api/v2/spans"

# Enable JMX Prometheus Metrics
jmx-metrics:
    enabled: true

# Image region cache configuration.  Uses the "redis-cache" configured above
# to avoid round trips to the server when the same region has already been
# rendered.
image-region-cache:
    enabled: false

# Pixels metadata cache configuration.  Uses the "redis-cache" configured above
# to avoid round trips to the server to retrieve the same set of Pixels
# metadata.
pixels-metadata-cache:
    enabled: false
#The string to be used as the Cache-Control header provided in responses
cache-control-header: "private, max-age=3600"
